name: Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    types:
      - labeled

jobs:
  release:
    if: github.event.action != 'labeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Bump version on merging Pull Requests with specific labels.
      # (bump:major,bump:minor,bump:patch)
      - id: bumpr
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: haya14busa/action-bumpr@v1

      # Update corresponding major and minor tag.
      # e.g. Update v1 and v1.2 when releasing v1.2.3
      - uses: haya14busa/action-update-semver@v1
        if: "!steps.bumpr.outputs.skip"
        with:
          tag: ${{ steps.bumpr.outputs.next_version }}

      # Get tag name.
      - id: tag
        uses: haya14busa/action-cond@v1
        with:
          cond: "${{ startsWith(github.ref, 'refs/tags/') }}"
          if_true: ${{ github.ref }}
          if_false: ${{ steps.bumpr.outputs.next_version }}

      # Create release.
      - uses: shogo82148/actions-create-release@v1
        if: "steps.tag.outputs.value != ''"
        with:
          # This token is provided by Actions, you do not need to create your own token
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ steps.tag.outputs.value }}
          release_name: Release ${{ steps.tag.outputs.value }}
          body: ${{ steps.bumpr.outputs.message }}
          draft: false
          prerelease: false

  release-check:
    if: github.event.action == 'labeled'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Post bumpr status comment
        uses: haya14busa/action-bumpr@v1

  publish-docker-hub:
    if: github.event.action != 'labeled'
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'
      - uses: actions/checkout@v3

      - id: docker_tag
        run: echo "::set-output name=tag::$(echo ${{steps.tag.outputs.value}} | cut -c 2-)"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{ secrets.DOCKER_AUTH_TOKEN }}

      - uses: imjasonh/setup-ko@v0.4
        env:
          KO_DOCKER_REPO:  bedrockstreaming/prescaling-exporter
          auth_token:  
      - run: ko publish ./ --tags latest,${{steps.docker_tag.outputs.tag}}
